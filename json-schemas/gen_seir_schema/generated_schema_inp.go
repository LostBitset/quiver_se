// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package genseirschema

type QseDseInpSchemaJson struct {
	// The formats or languages used
	Languages *QseDseInpSchemaJsonLanguages `json:"languages,omitempty" yaml:"languages,omitempty"`

	// The actual source to be analyzed
	Source *string `json:"source,omitempty" yaml:"source,omitempty"`

	// The assignments and sorts for symbolic variables
	Vars []QseDseInpSchemaJsonVarsElem `json:"vars,omitempty" yaml:"vars,omitempty"`
}

// The formats or languages used
type QseDseInpSchemaJsonLanguages struct {
	// The format or language used to encode SMT values and constraints
	Smt *string `json:"smt,omitempty" yaml:"smt,omitempty"`

	// The language of the source that is being analyzed
	Source *string `json:"source,omitempty" yaml:"source,omitempty"`
}

// The assignment and sort for a single symbolic variable
type QseDseInpSchemaJsonVarsElem struct {
	// The value assigned as an SMT source string
	AssignedValue *string `json:"assigned_value,omitempty" yaml:"assigned_value,omitempty"`

	// Symbolic variable names as used by the SMT solver
	SmtName *string `json:"smt_name,omitempty" yaml:"smt_name,omitempty"`

	// The sort of the variable
	Sort *string `json:"sort,omitempty" yaml:"sort,omitempty"`

	// What the variable is called in the source code
	SourceName *string `json:"source_name,omitempty" yaml:"source_name,omitempty"`
}
